{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { WebStorageUtil } from '../util/web-store-util';\nimport { Constants } from '../util/constants';\nimport * as i0 from \"@angular/core\";\nclass UserStorageService {\n  constructor() {\n    this.jogadores = WebStorageUtil.get('jogadores');\n    this.jogadorSource = new BehaviorSubject(this.jogadores.length);\n  }\n  save(jogador) {\n    this.jogadores = WebStorageUtil.get('jogadores');\n    this.jogadores.push(jogador);\n    WebStorageUtil.set('jogadores', this.jogadores);\n  }\n  isExist(value) {\n    this.jogadores = WebStorageUtil.get(Constants.USERS_KEY);\n    for (let u of this.jogadores) {\n      if (u.nome?.valueOf() == value?.valueOf()) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\nUserStorageService.ɵfac = function UserStorageService_Factory(t) {\n  return new (t || UserStorageService)();\n};\nUserStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserStorageService,\n  factory: UserStorageService.ɵfac\n});\nexport { UserStorageService };","map":{"version":3,"names":["BehaviorSubject","WebStorageUtil","Constants","UserStorageService","constructor","jogadores","get","jogadorSource","length","save","jogador","push","set","isExist","value","USERS_KEY","u","nome","valueOf","factory","ɵfac"],"sources":["/home/viniciuspetris/Downloads/Especialização/Frameworks Web/soccer-management/src/app/cadastro-jogador/jogador-storage.service.ts"],"sourcesContent":["import { BehaviorSubject, Observable } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Jogador } from '../model/jogador';\nimport { WebStorageUtil } from '../util/web-store-util';\nimport { Constants } from '../util/constants';\n\n@Injectable()\nexport class UserStorageService {\n  jogadores!: Jogador[];\n  private jogadorSource!: BehaviorSubject<number>;\n  constructor() {\n    this.jogadores = WebStorageUtil.get('jogadores');\n    this.jogadorSource = new BehaviorSubject<number>(this.jogadores.length);\n  }\n\n  save(jogador: Jogador) {\n    this.jogadores = WebStorageUtil.get('jogadores');\n    this.jogadores.push(jogador);\n    WebStorageUtil.set('jogadores', this.jogadores);\n  }\n\n  isExist(value: string): boolean {\n    this.jogadores = WebStorageUtil.get(Constants.USERS_KEY);\n    for (let u of this.jogadores) {\n      if (u.nome?.valueOf() == value?.valueOf()) {\n        return true;\n      }\n    }\n    return false;\n  }\n}"],"mappings":"AAAA,SAASA,eAAe,QAAoB,MAAM;AAGlD,SAASC,cAAc,QAAQ,wBAAwB;AACvD,SAASC,SAAS,QAAQ,mBAAmB;;AAE7C,MACaC,kBAAkB;EAG7BC,YAAA;IACE,IAAI,CAACC,SAAS,GAAGJ,cAAc,CAACK,GAAG,CAAC,WAAW,CAAC;IAChD,IAAI,CAACC,aAAa,GAAG,IAAIP,eAAe,CAAS,IAAI,CAACK,SAAS,CAACG,MAAM,CAAC;EACzE;EAEAC,IAAIA,CAACC,OAAgB;IACnB,IAAI,CAACL,SAAS,GAAGJ,cAAc,CAACK,GAAG,CAAC,WAAW,CAAC;IAChD,IAAI,CAACD,SAAS,CAACM,IAAI,CAACD,OAAO,CAAC;IAC5BT,cAAc,CAACW,GAAG,CAAC,WAAW,EAAE,IAAI,CAACP,SAAS,CAAC;EACjD;EAEAQ,OAAOA,CAACC,KAAa;IACnB,IAAI,CAACT,SAAS,GAAGJ,cAAc,CAACK,GAAG,CAACJ,SAAS,CAACa,SAAS,CAAC;IACxD,KAAK,IAAIC,CAAC,IAAI,IAAI,CAACX,SAAS,EAAE;MAC5B,IAAIW,CAAC,CAACC,IAAI,EAAEC,OAAO,EAAE,IAAIJ,KAAK,EAAEI,OAAO,EAAE,EAAE;QACzC,OAAO,IAAI;;;IAGf,OAAO,KAAK;EACd;;AAtBWf,kBAAkB,C;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB,C;SAAlBA,kBAAkB;EAAAgB,OAAA,EAAlBhB,kBAAkB,CAAAiB;AAAA;SAAlBjB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}